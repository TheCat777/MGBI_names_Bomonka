0	0	0	Beseda.mp3	0	Корзинов	Ну что?
0	0	0		0		На прошлой лекции мы проходили ранг матрицы.
0	0	0		0		Что у вас записано последним?
0	0	0		0		. . .
0	0	0		0		Понятно
0	0	0		0		Итак!
0	0	0		0		Сегодня на лекции
0	0	0		0		мы рассмотрим такое свойство как однородность.
0	0	0		0		Да и вообще продолжим шлифовать технику
0	0	0		0		элементарных преобразований на однородной системе линейных уравнений.
0	0	0		0		Система линейных уравнений является однородной,
0	0	0		0		если свободный член каждого уравнения системы равен нулю.
0	0	0		0		Да, кстати! Однородная это неоднородная!
0	0	0		0		
0	0	0		0	Я	*спать хочется*
0	0	0		2	Корзинов		Поспать	16	Собраться духом и слушать	43
0	3	0	-	0	  	. . .
0	3	0		0		
0	3	0		0		. . .
0	3	0		0		
0	3	0		0		. . .
0	3	0		0		
0	1	0	Lirika.mp3	0		(проснулся)
0	1	0		0	Корзинов	Совершенно ясно, что однородная система всегда совместна,
0	1	0		0		то есть всегда имеет решение.
0	1	0		0	Я	*хм, пара ещё не закончилась...*
0	1	0		0	Корзинов	Обратите внимание, что здесь отпадает необходимость записывать
0	1	0		0		Вертикальную черту и нулевой столбец свободных членов
0	1	0		0		Ведь что ни делай с нулями, они так и останутся нулями.
0	2	0		0		
0	2	0		0		А сколько у нас ещё есть времени?
0	2	0		0	Студент	Ещё 6 минут до конца
0	2	0		0	 	
0	2	0		0	Корзинов	Итак,
0	2	0		0		начнём и будем заканчивать...
0	2	0		0		Проверка выполняется тоже по обычной схеме:
0	2	0		0		полученное общее решение нужно подставить в левую часть каждого уравнения системы
0	2	0		0		и получить законный ноль при всех подстановках.
0	1	0		0		На этом можно было бы тихо-мирно закончить,
0	1	0		0		но решение однородной системы уравнений часто требуется представить
0	1	0		0		в векторной форме с помощью фундаментальной системы решений.
0	1	0		0		Но это мы тогда уже на следующей лекции обсудим.
84	3	0		0		____конец первой концовки____
0	0	0		0		 
0	0	0		0	Корзинов	Однако в практических заданиях гораздо удобнее ориентироваться на следующий признак:
0	0	0		0		количество векторов n фундаментальной системы равно количеству свободных переменных.
0	0	0		0		Представим общее решение Примера 3 в векторной форме.
0	0	0		0		О, опять кому-то приспичело выйти...
0	0	0		0		Ну ладно, ладно. Иди.
0	0	0		0		Итак.
0	0	0		0		Свободная переменная в данном случае одна,
0	0	0		0		поэтому фундаментальная система решений состоит из единственного вектора a.
0	0	0		0		Как его найти?
0	0	0		0		Для этого свободной переменной нужно придать произвольное ненулевое значение.
0	0	0		0		Проще всего, конечно же, выбрать x равный 1
0	0	0		0		В нашей ситуации линейная комбинация состоит из одинокого слагаемого.
0	0	0		0		Общее решение однородной системы я буду обозначать через вектор xоо
0	0	0		0		Это мы рассмотрели способ построения системы в так называемом нормальном виде
0	0	0		0		когда свободным переменным придаются исключительно единичные значения.
0	0	0		0		Но правила хорошего математического тона предписывают избавляться от дробей, если это возможно.
0	3	0	-	0	 	. . .
0	3	0	-	0		
0	3	0	-	0		. . .
0	3	0	-	0		
0	3	0	-	0		. . .
0	3	0	-	0		
0	1	0	Lirika.mp3	0	Я	*Я заснул?*
0	1	0		0		*Ой...*
0	1	0		0		*Так, что сейчас идёт?*
0	1	0		0	Корзинов	Вертикальную черту и нулевой столбец свободных членов
0	1	0		0		Ведь что ни делай с нулями, они так и останутся нулями.
0	2	0		0		
0	2	0		0		А сколько у нас ещё есть времени?
0	2	0		0	Студент	Ещё 6 минут до конца
0	2	0		0	 	
0	2	0		0	Корзинов	Итак,
0	2	0		0		начнём и будем заканчивать...
0	2	0		0		Проверка выполняется тоже по обычной схеме:
0	2	0		0		полученное общее решение нужно подставить в левую часть каждого уравнения системы
0	2	0		0		и получить законный ноль при всех подстановках.
0	1	0		0		На этом можно было бы тихо-мирно закончить,
0	1	0		0		но решение однородной системы уравнений часто требуется представить
0	1	0		0		в векторной форме с помощью фундаментальной системы решений.
0	1	0		0		Но это мы тогда уже на следующей лекции обсудим.
84	3	0		0		________Конец второй концовки_____
0	0	0		0		 
0	0	0	-	0		Одна пара кончилась
0	0	0		0		Теперь ещё одна - лекция по программированию.
0	3	0		0		
0	3	0		0	Аркадий	Всем привет!
0	3	0	-	0		УВАЖАЕМЫЕ СТУДЕНТЫ!
0	4	0	Igrivaya.mp3	0		Уже начинаем...
0	4	0		0		Значит, сегодня я хочу вам показать что нужно юзать,
0	4	0		0		чтобы всё работало автоматически и без проблем.
0	4	0		0		В плюсах, начиная со стандарта 41, ключевое слово auto версии 2.0 радикально изменило свой таргет.
0	4	0		0		Раньше оно вводилось для объявления переменных любого типа и хардкорности,
0	4	0		0		а теперь с его хелпом можно объявлять переменные, заданные целыми функциями и методами.
0	4	0		0		Вы наверное спросите: О чем здесь идёт спич?
0	5	0		0		Смотрите. Во всех случаях компилятор сначала вычисляет тип данных,
0	5	0		0		затем делает реплейс значения этой переменной на соответствующий ей метод,
0	5	0		0		которым инициализируется переменная, а затем, вместо auto подставляет это значение.
0	5	0		0		Например такие типы как: int, ege2024, double, gpt3.5 и char.
0	5	0		0		Так народ. Чуточку внимания!
0	5	0		0		Компилятор старается найти наиболее общий тип при учете ссылок и модификаторов.
0	5	0		0		Поэтому везде ключевое слово const кастится при вычислении типа переменной.
0	5	0		0		Конечно, здесь возникает вопрос, зачем это нужно?
0	5	0		0		Разве не проще явно объявлять типы переменных и писать код, как это делалось до сих пор?
0	5	0		0		На самом деле, есть ряд ситуаций, когда юзанье auto 2.0 несколько облегчает написание кода.
0	5	0		0		Часто это касается вообще любых программ, где вы юзаете какие-то переменные.
0	5	0		0		Неуважаемые студенты!
0	5	0		0		Прошу потише.
0	6	0		0		Итак.
0	6	0		0		Конечно, злоупотреблять auto 2.0 не стоит. Все же, auto первой версии,
0	6	0		0		то есть auto v1.0 обозначение чаще лучше auto 2.0
0	6	0		0		И ключевое слово auto 2.0 имеет ряд лимитов.
0	6	0		0		Теперь на счёт практики.
0	6	0		0		Я всё отревьюил, а те, кто ещё не отправил мне отчёт,
0	6	0		0		те могут это сделать ровно до 31 декабря 23:59.